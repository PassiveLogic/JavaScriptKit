name: Run unit tests
on:
  pull_request:
  push:
    branches: [main]
jobs:
  test:
    name: Build and Test
    strategy:
      matrix:
        entry:
          - os: ubuntu-22.04
            toolchain:
              download-url: https://download.swift.org/swift-6.0.2-release/ubuntu2204/swift-6.0.2-RELEASE/swift-6.0.2-RELEASE-ubuntu22.04.tar.gz
            wasi-backend: Node
          - os: ubuntu-22.04
            toolchain:
              download-url: https://download.swift.org/development/ubuntu2204/swift-DEVELOPMENT-SNAPSHOT-2025-02-26-a/swift-DEVELOPMENT-SNAPSHOT-2025-02-26-a-ubuntu22.04.tar.gz
            wasi-backend: Node
          - os: ubuntu-22.04
            toolchain:
              download-url: https://download.swift.org/development/ubuntu2204/swift-DEVELOPMENT-SNAPSHOT-2025-02-26-a/swift-DEVELOPMENT-SNAPSHOT-2025-02-26-a-ubuntu22.04.tar.gz
            wasi-backend: Node

    runs-on: ${{ matrix.entry.os }}
    env:
      JAVASCRIPTKIT_WASI_BACKEND: ${{ matrix.entry.wasi-backend }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: ./.github/actions/install-swift
        with:
          download-url: ${{ matrix.entry.toolchain.download-url }}
      - uses: swiftwasm/setup-swiftwasm@v2
        id: setup-swiftwasm
      - name: Configure Swift SDK
        run: echo "SWIFT_SDK_ID=${{ steps.setup-swiftwasm.outputs.swift-sdk-id }}" >> $GITHUB_ENV
      - run: make bootstrap
      - run: make test
      - run: make unittest
        # Skip unit tests with uwasi because its proc_exit throws
        # unhandled promise rejection.
        if: ${{ matrix.entry.wasi-backend != 'MicroWASI' }}
      - name: Check if SwiftPM resources are stale
        run: |
          make regenerate_swiftpm_resources
          git diff --exit-code Sources/JavaScriptKit/Runtime

  native-build:
    # Check native build to make it easy to develop applications by Xcode
    name: Build for native target
    strategy:
      matrix:
        include:
          - os: macos-15
            xcode: Xcode_16
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - run: swift build
        env:
          DEVELOPER_DIR: /Applications/${{ matrix.xcode }}.app/Contents/Developer/

  embedded-build:
    name: Build for embedded target
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        entry:
          - os: ubuntu-22.04
            toolchain:
              download-url: https://download.swift.org/development/ubuntu2204/swift-DEVELOPMENT-SNAPSHOT-2025-02-26-a/swift-DEVELOPMENT-SNAPSHOT-2025-02-26-a-ubuntu22.04.tar.gz
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/install-swift
        with:
          download-url: ${{ matrix.entry.toolchain.download-url }}
      - run: ./Examples/Embedded/build.sh
